@using static NS.EMS.Model.EmployeeModel
@model NS.EMS.Model.EmployeeModel
@{
    ViewData["Title"] = "Index";
}
<h1>Add Employee</h1>

<hr />

@using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { id = "formAddEmployee" }))
{
    @Html.ValidationSummary(false)
    <div class="form-group">
        <label for="EmployeeName" class="col-md-3 control-label">Employee Name</label>
        <div class="col-md-9">
            @Html.TextBoxFor(x => x.EmployeeName, "", new { @class = "form- control", placeholder = "Employee Name" })
            @Html.ValidationMessageFor(x => x.EmployeeName, "Please enter Employee Name", new { @class = "text-danger", style = "display:none" })
        </div>
    </div>
    <br />

    <div class="form-group">
        <label for="Email" class="col-md-3 control-label">Email</label>
        <div class="col-md-9">
            @Html.TextBoxFor(x => x.Email, "", new { @class = "form-control", placeholder = "Email" })
            @Html.ValidationMessageFor(x => x.Email, "Please enter Email", new { @class = "text-danger", style = "display:none" })
        </div>
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "col-md-3 control-label" })
        <div class="col-md-9">

            @Html.RadioButtonFor(x => x.Gender, "Male")
            Male
            @Html.RadioButtonFor(x => x.Gender, "Female")
            Female
            @Html.ValidationMessageFor(x => x.Gender, "Please Select an option", new { @class = "text-danger", style = "display:none" })

        </div>

    </div>


    <div class="form-group">
        <label for="Mobile" class="col-md-3 control-label">Contact No.</label>
        <div class="col-md-9">
            @Html.TextBoxFor(x => x.Mobile, new { @class = "form-control", placeholder = "Contact No." })
            @Html.ValidationMessageFor(x => x.Mobile, "Please enter Contact", new { @class = "text-danger", style="display:none" })
        </div>
    </div>
    <div class="form-group">
        <span id="spnMessage" class="text-danger">@TempData["ErrorMessage"]</span>
        <span id="spnMessage" class="text-success">@TempData["SuccessMessage"]</span>
        <br />

        <div class="form-group">
            <label for="Department" class="col-md-3 control-label">Department</label>
            <div class="col-md-9">
                @Html.DropDownListFor(m => m.Deptid,
         new SelectList(Enum.GetValues(typeof(Deptartment))), "Select Department")

            </div>
        </div>


        <!-- Button -->
        <div class="col-md-offset-3 col-md-9">
            <button id="btn-addemployee" type="submit" class="btn btn-info"><i class="icon-hand-right"></i> Submit </button>
            <span style="margin-left:8px;"></span>
        </div>
    </div>
}
<script src="~/js/AddEmployee.js"></script>





