
@{
    ViewData["Title"] = "EditEmployee";
}

@using  NS.EMS.Data.Entities
@model Employee
<h1>Edit Employee</h1>

<hr />
<hr />
<div class="row">
    <div class="col-md-10">
        @using (Html.BeginForm(FormMethod.Post,new { id = "formaddEmployee" }))
        {
            @Html.ValidationSummary(false)
            @Html.AntiForgeryToken()
        <div class="container-fluid">
            @Html.HiddenFor(model => model.Eid)

            <div class="form-group">
                <div class="md-10">
                    @Html.LabelFor(
                model => model.Eid, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Eid, new { disabled = "disabled", @readonly = "readonly" })
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(student => student.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeName, "Please Enter Employee Name", new { @class = "text-danger", style = "display:none" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "Enter Email Id", new { @class = "text-danger", style = "display:none" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "col-md-3 control-label" })
                <div class="col-md-9">

                    @Html.RadioButtonFor(x => x.Gender, "Male")
                    Male
                    @Html.RadioButtonFor(x => x.Gender, "Female")
                    Female
                    @Html.ValidationMessageFor(x => x.Gender, "Please Select an option", new { @class = "text-danger", style = "display:none" })

                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "Please Enter Contact Number", new { @class = "text-danger", style = "display:none" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button id="btn-addemployee" type="submit" class="btn btn-primary" value="Save">Save</button>

                </div>
            </div>
        </div>
        }
    </div>
</div>

<div>
    <a asp-action="GetAllEmployees">Back to Employees List</a>
</div>

<script src="~/js/AddEmployee.js"></script>