
@{
    ViewData["Title"] = "EditEmployee";
}

@using NS.EMS.WEB.Entities
@model Employee
<h1>Edit Employee</h1>

<hr />
<hr />
<div class="row">
    <div class="col-md-10">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="container-fluid">
                @* @Html.ValidationSummary(true, "", new { @class = "text-danger" }) *@

                @Html.HiddenFor(model => model.Eid)

                <div class="form-group">
                    <div class="md-10">
                        @Html.LabelFor(
                    model => model.Eid, htmlAttributes: new
                    {
                        @class = "control-label col-md-2"
                    })

                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Eid, new { disabled = "disabled", @readonly = "readonly" })
                        </div>

                    </div>
                </div>
                <br>

                <div class="form-group">
                    @Html.LabelFor(student => student.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-primary" value="Save">Save</button>

                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="GetAllEmployees">Back to Employees List</a>
</div>

